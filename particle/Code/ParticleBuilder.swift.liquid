//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

class {{ prefix }}{{ module_info.name }}ParticleBuilder: BaseBuilder {
    
    func build(moduleInteractor: {{ prefix }}{{ module_info.name }}ParticleInteractorResultProtocol) -> UIViewController {
        
        container.register({{ prefix }}{{ module_info.name }}ParticleInteractor.self) { r in
            {{ prefix }}{{ module_info.name }}ParticleInteractor()
        }.initCompleted { r, interactor in
            interactor.moduleInteractor = moduleInteractor
            interactor.presenter = r.resolve({{ prefix }}{{ module_info.name }}ParticlePresenter.self)
        }.inObjectScope(.container)
        
        container.register({{ prefix }}{{ module_info.name }}ParticlePresenter.self) { r in
            {{ prefix }}{{ module_info.name }}ParticlePresenter()
        }.initCompleted { r, presenter in
            presenter.interactor = r.resolve({{ prefix }}{{ module_info.name }}ParticleInteractor.self)
            presenter.view = r.resolve({{ prefix }}{{ module_info.name }}ParticleView.self)
        }.inObjectScope(.container)
        
        container.register({{ prefix }}{{ module_info.name }}ParticleView.self) { r in
            let view: {{ prefix }}{{ module_info.name }}ParticleView = UIStoryboard(storyboard: .{{ prefix }}{{ module_info.name }}).instantiateViewController()
            return view
        }.initCompleted { r, view in
            view.lifecycleListener = r.resolve({{ prefix }}{{ module_info.name }}ParticlePresenter.self)
            view.presenter = r.resolve({{ prefix }}{{ module_info.name }}ParticlePresenter.self)
        }.inObjectScope(.container)
        
        return container.forceResolve({{ prefix }}{{ module_info.name }}ParticleView.self)
    }
    
}